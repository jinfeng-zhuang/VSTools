diff --git a/video/Src/ipcore/malone/ipcore_malone_api.c b/video/Src/ipcore/malone/ipcore_malone_api.c
old mode 100644
new mode 100755
index 297167a8..90961662
--- a/video/Src/ipcore/malone/ipcore_malone_api.c
+++ b/video/Src/ipcore/malone/ipcore_malone_api.c
@@ -729,6 +729,39 @@ RETURN_TYPE vdec_malone_setdecmode(vdec_inst ptInst, vdec_mode_t* ptDecMode) {
     SAINT_CHECK(ptInst != NULL, SYS_NULL_POINTER);
     SAINT_CHECK(ptDecMode != NULL, SYS_NULL_POINTER);
 
+    // set post processing.
+    // make sure setPostProcess is called before SetDecodeMode
+    // And application can call SetPostProcess again to modify scale factor, rotation angle, etc, after get Sequence
+    // Header
+    memset(&ptPrivDat->tPostProc.tJpegParam, 0, sizeof(MediaIPSW_DEC_JpegParam_t));
+    //ptPrivDat->tPostProc.bDeblockingEnable =
+    //    (ptDecMode->eStreamType == MediaIPSW_DEC_StreamTypeMPEG2) ? trid_false : ptPrivDat->tDecodeMode.bEnDeblocking;
+    ptPrivDat->tPostProc.bDeringingEnable = ptPrivDat->tDecMode.bEnDeringing;
+    ptPrivDat->tPostProc.tJpegParam.bChunkMode = trid_false;
+    ptPrivDat->tPostProc.tJpegParam.bRGBMode = trid_false;
+    ptPrivDat->tPostProc.tJpegParam.eHScaleFactor = MediaIPSW_DEC_ScaleFactor1_1;
+    ptPrivDat->tPostProc.tJpegParam.eVScaleFactor = MediaIPSW_DEC_ScaleFactor1_1;
+    ptPrivDat->tPostProc.tJpegParam.eRotationAngle = MediaIPSW_DEC_RotationAngleNone;
+    ptPrivDat->tPostProc.tJpegParam.eRotationMode = MediaIPSW_DEC_RotationModeCtlReg;
+    ptPrivDat->tPostProc.tJpegParam.bValidInfo = trid_true;
+    ptPrivDat->tPostProc.tJpegParam.ulCropHeight = 0;
+    ptPrivDat->tPostProc.tJpegParam.ulCropWidth = 0;
+    ptPrivDat->tPostProc.tJpegParam.ulCropXStart = 0;
+    ptPrivDat->tPostProc.tJpegParam.ulCropYStart = 0;
+    //ptPrivDat->tPullDownInfo.bEnable = trid_false;
+    //ptPrivDat->tPullDownInfo.bTopFieldFirst = trid_true;
+    //ptPrivDat->ulBBDVerActive = 0;
+    ptPrivDat->tPostProc.tJpegParam.eMjpegMode = MediaIPSW_DEC_MjpegMode_MJPEGA;
+        //this->tUserPostProccessInfo.tJpegParam.eJpegMode;  // set it as MJPEG as default, because JPEG will set it again later
+    ptPrivDat->tPostProc.tJpegParam.eMjpegScanType = MediaIPSW_DEC_MjpegScanType_Progressive;
+        //= this->tUserPostProccessInfo.tJpegParam.eMjpegScanType;
+
+    // param[0]:	pRet
+    len = sizeof(trid_uint32);
+    Data[0] = (trid_uint32)&DecRet;
+    DecRet = MediaIPSW_DEC_ErrorFailed;
+    ret = Video_Sch_AddMsg(ptPrivDat->ulHandle, VIDEO_MSG_DRV_CMD_SETPOSTPROC, NULL, NULL, Data, len, MSG_TYPE_SYNC);
+
     ptPrivDat->tDecodeMode.eStreamType = sf_vdec_streamtype2malonetype(ptDecMode->eStreamType);
     ptPrivDat->tDecodeMode.bIsScaled = ptDecMode->bIsScaled;
     ptPrivDat->tDecodeMode.bLowLatency = ptDecMode->bLowLatency;
