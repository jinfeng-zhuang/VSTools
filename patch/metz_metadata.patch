diff --git a/video/Src/decoder/mpegdisp/trid_video_mpegdisp_edr.c b/video/Src/decoder/mpegdisp/trid_video_mpegdisp_edr.c
index 9566977b..633e7e84 100755
--- a/video/Src/decoder/mpegdisp/trid_video_mpegdisp_edr.c
+++ b/video/Src/decoder/mpegdisp/trid_video_mpegdisp_edr.c
@@ -248,6 +248,49 @@ static void MpegDisp_HDRFrameMatch(ChannelType_e ChanType) {
     }
 }
 
+#define PASS_METADATA_DIRECTLY
+
+#ifdef PASS_METADATA_DIRECTLY
+static void MpegDisp_MetadataCalc(void)
+{
+    EDRMetadata_t * pMetaData = NULL;
+    int count = 0;
+
+#if 1
+    while ((pMetaData = EDR_Metadata_Parser_ShowFrm_Calc()) != NULL) {
+        if (pMetaData->ullPTS == -1)
+            continue;
+        
+        EDR_Metadata_Calc(
+            K01UVirt2DA(pMetaData),
+            0, // Not BPP8 //((BPP8 == ptFrmInfo_BL->tMpegFormat.PixelDepth) ? 1 : 0),
+            1, // ((ptFrmInfo_BL->tMpegFormat.wVsize < 2160) ? 1 : 0),
+            0, // Channel Type //ptMpegDispObj_BL->ulHandle,
+            pMetaData->ulMetaCalcAddr,
+            pMetaData->ulLUTAddr);
+    }
+#else
+    pMetaData = EDR_Metadata_Parser_ShowFrm_Calc();
+
+    if (pMetaData != NULL) {
+
+        if (pMetaData->ullPTS == -1) {
+            VIDEO_ERROR("metadata PTS = -1\n");
+            return;
+        }
+    
+        EDR_Metadata_Calc(
+            K01UVirt2DA(pMetaData),
+            0, // Not BPP8 //((BPP8 == ptFrmInfo_BL->tMpegFormat.PixelDepth) ? 1 : 0),
+            1, // ((ptFrmInfo_BL->tMpegFormat.wVsize < 2160) ? 1 : 0),
+            0, // Channel Type //ptMpegDispObj_BL->ulHandle,
+            pMetaData->ulMetaCalcAddr,
+            pMetaData->ulLUTAddr);
+    }
+#endif
+}
+#endif
+
 static void MpegDisp_EDRFrameMatch(void) {
     int ret = SYS_FAILED;
     VideoDecCtx_t* ptDecObj_BL = NULL;
@@ -490,6 +533,11 @@ static void MpegDisp_EDRFrameMatch(void) {
             ptFrmInfo_BL->tEDRInfo.MetaDataAddr = K01UVirt2DA(pMetaData);
             ptFrmInfo_BL->tEDRInfo.ELFrameAvail = 0;
             ptFrmInfo_BL->tEDRInfo.ELFrameInfoAddr = 0;
+
+#ifdef PASS_METADATA_DIRECTLY
+            FrameqAdd(ptMpegDispObj_BL->EDRFrmPreQ, tEDRFrame);
+
+#else
             // Calculate EDR metadata
             if (SYS_NOERROR == EDR_Metadata_Calc(ptFrmInfo_BL->tEDRInfo.MetaDataAddr,
                                                  ((BPP8 == ptFrmInfo_BL->tMpegFormat.PixelDepth) ? 1 : 0),
@@ -497,6 +545,8 @@ static void MpegDisp_EDRFrameMatch(void) {
                                                  pMetaData->ulMetaCalcAddr, pMetaData->ulLUTAddr)) {
                 FrameqAdd(ptMpegDispObj_BL->EDRFrmPreQ, tEDRFrame);
             }
+#endif
+
 #endif
         }
         // 6.2, NO output, need discard frame
@@ -641,6 +691,11 @@ void mpegdisp_main_thread() {
         if (ptMpegDispObj) {
             if ((ptMpegDispObj->eState >= DISP_STATE_START) && (ptMpegDispObj->eState < DISP_STATE_MAX)) {
                 if (ptMpegDispObj->bEDREnable == trid_true) {
+
+#ifdef PASS_METADATA_DIRECTLY
+                    MpegDisp_MetadataCalc();
+#endif
+
                     MpegDisp_EDRFrameMatch();
                     MpegDisp_EDRFrameOutMatch();
                     bValid = trid_true;
diff --git a/video/Src/include/edr/metadata_parser.h b/video/Src/include/edr/metadata_parser.h
old mode 100644
new mode 100755
index 600f0253..d4b5dc79
--- a/video/Src/include/edr/metadata_parser.h
+++ b/video/Src/include/edr/metadata_parser.h
@@ -74,6 +74,8 @@ RETURN_TYPE EDR_Metadata_Parser_EOS(trid_bool bEOF);
 EDRMetadata_t* EDR_Metadata_Parser_GetFrm(void);
 EDRMetadata_t* EDR_Metadata_Parser_ShowFrm(void);
 
+EDRMetadata_t* EDR_Metadata_Parser_ShowFrm_Calc(void);
+
 RETURN_TYPE EDR_Metadata_Parser_ReleaseFrm(EDRMetadata_t* ptMetadata);
 
 RETURN_TYPE EDR_Metadata_Parser_GetStrmStatus(trid_uint32* ulAvailableSize, trid_bool* bEOS);
diff --git a/video/Src/ipcore/edr/src/metadata_parser.c b/video/Src/ipcore/edr/src/metadata_parser.c
old mode 100644
new mode 100755
index 3edc0577..f276bacd
--- a/video/Src/ipcore/edr/src/metadata_parser.c
+++ b/video/Src/ipcore/edr/src/metadata_parser.c
@@ -166,6 +166,7 @@ typedef struct _tagMetaDataCalcQ {
 // edr_metadata gbl_metadata[1] = {0};
 EDRMetadata_t* gbl_metadata;
 MetaDataQ_t gbl_meta_dataQ;
+static int gbl_meta_dataQ_rd;
 MetaDataQ_t gbl_meta_data_ptsQ;
 trid_uint32 gbl_meta_counter = 0;
 static DVCalc_t* gbl_metadataCalc;
@@ -1156,6 +1157,9 @@ RETURN_TYPE EDR_Metadata_Parser_Start() {
     stop_edr_parser = 0;
     OSA_Queue_Send(&MetaDatPipe, (void*)&cmd, OSA_NO_WAIT);
     gbl_meta_counter = 0;
+
+    gbl_meta_dataQ_rd = gbl_meta_dataQ.wrIdx;
+    
     return SYS_NOERROR;
 }
 
@@ -1166,6 +1170,9 @@ RETURN_TYPE EDR_Metadata_Parser_Stop() {
     OSA_Queue_Send(&MetaDatPipe, (void*)&cmd, OSA_NO_WAIT);
     gbl_meta_counter = 0;
     reset_flag = trid_true;
+
+    gbl_meta_dataQ_rd = gbl_meta_dataQ.wrIdx;
+    
     return SYS_NOERROR;
 }
 
@@ -1177,6 +1184,9 @@ RETURN_TYPE EDR_Metadata_Parser_Flush() {
     gbl_edr_metadata_obj.stream_desc->ulRp = gbl_edr_metadata_obj.stream_desc->ulStartAddr;
     gbl_edr_metadata_obj.stream_desc->ulWp = gbl_edr_metadata_obj.stream_desc->ulRp;
     VIDEO_ERROR("metadata wp 0x%x, rp 0x%x\n", gbl_edr_metadata_obj.stream_desc->ulWp, gbl_edr_metadata_obj.stream_desc->ulRp);
+
+    gbl_meta_dataQ_rd = gbl_meta_dataQ.wrIdx;
+
     return SYS_NOERROR;
 }
 
@@ -1185,6 +1195,8 @@ RETURN_TYPE EDR_Metadata_Parser_EOS(trid_bool bEOF) {
     VIDEO_INFO("EDR func %s, line %d, bEOF %d\n", __func__, __LINE__, bEOF);
     if (bEOF == trid_true) OSA_Queue_Send(&MetaDatPipe, (void*)&cmd, OSA_NO_WAIT);
 
+    gbl_meta_dataQ_rd = gbl_meta_dataQ.wrIdx;
+
     return SYS_NOERROR;
 }
 
@@ -1192,10 +1204,12 @@ EDRMetadata_t* EDR_Metadata_Parser_GetFrm(void) {
     if (FrameqQueryFull(gbl_meta_dataQ) > 0) {
         int index;
         MetaDataQGet(gbl_meta_dataQ, index);
+    #if 0
         gbl_metadata[index].ulStartCode = 0xdeadbeef;
         gbl_metadata[index].ulEndCode = 0xdeadbeef;
         gbl_metadata[index].ulCounter = gbl_meta_counter;
         gbl_meta_counter++;
+    #endif
         VIDEO_WARNING_DUMP("pts:0x%08llx input_crc:0x%08x out_crc:0x%08x \n", gbl_metadata[index].ullPTS, gbl_metadata[index].ulRpuCrc,
                            gbl_metadata[index].ulMetaDataCrc);
         VIDEO_INFO("EDR func %s, line %d, i:%d\n", __func__, __LINE__, index);
@@ -1216,6 +1230,37 @@ EDRMetadata_t* EDR_Metadata_Parser_ShowFrm(void) {
     return NULL;
 }
 
+EDRMetadata_t* EDR_Metadata_Parser_ShowFrm_Calc(void) {
+    int index;
+    static int prev_index = -1;
+
+    if (gbl_meta_dataQ_rd != gbl_meta_dataQ.wrIdx) {
+
+        index = gbl_meta_dataQ.q[gbl_meta_dataQ_rd];
+
+        gbl_meta_dataQ_rd = (gbl_meta_dataQ_rd + 1) % (gbl_meta_dataQ.sz);
+        
+        VIDEO_ERROR("rd %d wr %d rd_l %d => [index %d] = addr %p ( counter %d)\n",
+            gbl_meta_dataQ.rdIdx, gbl_meta_dataQ.wrIdx, gbl_meta_dataQ_rd,
+            index,
+            &gbl_metadata[index],
+            gbl_metadata[index].ulCounter);
+
+        if (prev_index != index) {
+            prev_index = index;
+#if 1
+            gbl_metadata[index].ulStartCode = 0xdeadbeef;
+            gbl_metadata[index].ulEndCode = 0xdeadbeef;
+            gbl_metadata[index].ulCounter = gbl_meta_counter;
+            gbl_meta_counter++;
+#endif
+            return &gbl_metadata[index];
+        }
+    }
+
+    return NULL;
+}
+
 RETURN_TYPE EDR_Metadata_Parser_ReleaseFrm(EDRMetadata_t* ptMetadata) {
     int i = 0;
 
